# 최적의 교통 루트 분석

## 개요
이 프로젝트는 주어진 데이터 파일을 사용하여 동양미래대학교로의 최적의 교통 루트를 찾는 것을 목표로 합니다. 사용된 데이터 파일들은 다음과 같습니다:

1. `2024년_버스노선별_정류장별_시간대별_승하차_인원_정보(04월).csv`
2. `2024년1~4월1일기준_서울시버스정류소위치정보.csv`
3. `서울교통공사_역별시간대별혼잡도_20240331.csv`
4. `서울시_지하철_호선별_역별_시간대별_승하차_인원_정보.csv`

## 분석 목표
1. **혼잡도 분석**: 각 시간대별 버스와 지하철의 혼잡도를 분석하여 피해야 할 시간대 및 노선을 파악합니다.
2. **경로 최적화**: 동양미래대학교 위치를 기준으로 버스와 지하철의 최적 경로를 계산합니다. 혼잡도를 최소화하고 이동 시간을 최적화하는 경로를 찾습니다.

## 데이터 전처리 및 통합

### 1. 데이터 로드 및 전처리
다음 코드를 사용하여 데이터를 로드하고 전처리합니다:

```python
import pandas as pd

# 파일 경로 설정 (현재 디렉토리 기준)
file_paths = {
    "bus_boarding_info": "2024년_버스노선별_정류장별_시간대별_승하차_인원_정보(04월).csv",
    "bus_stop_location": "2024년1~4월1일기준_서울시버스정류소위치정보.csv",
    "subway_congestion": "서울교통공사_역별시간대별혼잡도_20240331.csv",
    "subway_boarding_info": "서울시_지하철_호선별_역별_시간대별_승하차_인원_정보.csv"
}

# 데이터 로드
try:
    bus_boarding_info = pd.read_csv(file_paths["bus_boarding_info"], low_memory=False)
    bus_stop_location = pd.read_csv(file_paths["bus_stop_location"])
    subway_congestion = pd.read_csv(file_paths["subway_congestion"])
    subway_boarding_info = pd.read_csv(file_paths["subway_boarding_info"])
    
    # 데이터셋 확인
    print("버스 승하차 정보 열 이름:", bus_boarding_info.columns)
    print("버스 정류소 위치 정보 열 이름:", bus_stop_location.columns)
    print("지하철 혼잡도 정보 열 이름:", subway_congestion.columns)
    print("지하철 승하차 정보 열 이름:", subway_boarding_info.columns)
    
except FileNotFoundError as e:
    print(f"File not found: {e.filename}")
